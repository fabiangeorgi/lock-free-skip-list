name: Build + Test + Benchmark

on:
  push:
    branches:
      - main

jobs:
  run_checks:
    name: Build + Test + Benchmark
    runs-on: [ self-hosted, hdp23-task4 ]

    env:
      CC: gcc-11
      CXX: g++-11

      REPO_DIR: ${{github.workspace}}/repo
      BUILD_DIR: ${{github.workspace}}/build
      ASAN_DIR: ${{github.workspace}}/build-asan
      TSAN_DIR: ${{github.workspace}}/build-tsan

      LEADERBOARD: http://localhost:60085


      CURL_CMD: "curl -X POST --fail-with-body -F github_user=${{github.actor}} -F project_id=5 -F secret=${{secrets.HDP_SECRET}}"
      COMMIT_URL: "https://github.com/${{github.repository}}/tree/${{github.sha}}"

      BM_RESULT_FILE: bm_result.txt

    # Use bash for all steps.
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
        with:
          # Clones the repository to the subdir `repo`.
          path: repo

      - name: Copy Evaluation Files
        working-directory: ${{env.REPO_DIR}}
        run: unzip -o -P ${{secrets.SERVER_FILES_PW}} /server_files.zip

      - name: Create Build Environment
        run: mkdir $BUILD_DIR $ASAN_DIR $TSAN_DIR

      - name: Release - Configure CMake and Build
        working-directory: ${{env.BUILD_DIR}}
        run: |
          cmake $REPO_DIR -DCMAKE_BUILD_TYPE=Release -DCI_BUILD=ON -G Ninja
          cmake --build $BUILD_DIR

      - name: ASAN - Configure CMake and Build
        working-directory: ${{env.ASAN_DIR}}
        run: |
          cmake $REPO_DIR -DCMAKE_BUILD_TYPE=Asan -DCI_BUILD=ON -G Ninja
          cmake --build $ASAN_DIR --target advanced_test

      - name: TSAN - Configure CMake and Build
        working-directory: ${{env.TSAN_DIR}}
        run: |
          cmake $REPO_DIR -DCMAKE_BUILD_TYPE=Tsan -DCI_BUILD=ON -G Ninja
          cmake --build $TSAN_DIR --target advanced_test

      - name: Delete Raw Files
        run: rm -rf $REPO_DIR

      - name: Run Basic Tests
        working-directory: ${{env.BUILD_DIR}}
        # Only allow test run of 10 seconds.
        run: ctest -R basic_test -V --timeout 10

      - name: Submit Basic Test Pass
        run: $CURL_CMD $LEADERBOARD/deliver_basic

      - name: Run Advanced Tests
        working-directory: ${{env.BUILD_DIR}}
        # Only allow test run of 30 seconds.
        run: ctest -R advanced_test -V --timeout 30

      - name: Run ASAN Tests
        # We don't care about leaks in this task.
        env: {"ASAN_OPTIONS": "detect_leaks=0"}
        working-directory: ${{env.ASAN_DIR}}
        # Only allow test run of 60 seconds.
        run: ctest -R advanced_test -V --timeout 60

      - name: Run TSAN Tests
        working-directory: ${{env.TSAN_DIR}}
        # Only allow test run of 60 seconds.
        run: ctest -R advanced_test -V --timeout 60

      - name: Submit Advanced Test Pass
        run: $CURL_CMD $LEADERBOARD/deliver_advanced

      - name: Run Benchmark
        working-directory: ${{env.BUILD_DIR}}
        timeout-minutes: 2  # Timeout to stop bad code.
        run: ./hdp_benchmark $BM_RESULT_FILE

      - name: Submit Benchmark Results
        working-directory: ${{env.BUILD_DIR}}
        run: $CURL_CMD -F runtime=`cat $BM_RESULT_FILE` -F git_commit=$COMMIT_URL $LEADERBOARD/deliver_benchmark

      - name: Clean Up
        if: always()
        run: rm -rf $REPO_DIR $BUILD_DIR $ASAN_DIR $TSAN_DIR
